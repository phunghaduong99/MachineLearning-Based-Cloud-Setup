#=======================================================================
# Copyright (c) 2017-2020 Aarna Networks, Inc.
# All rights reserved.
# ======================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#           http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================  

global:
  nodePortPrefixExt: 304
  persistence: {}
#################################################################
# Application configuration defaults.
#################################################################
# application image
repository: registry.hub.docker.com
image: sandeepaarna/policyms:latest
pullPolicy: Always

# default number of instances
replicaCount: 1

nodeSelector: {}

affinity: {}

namespace: emco 
kafkaNamespace: onap4k8s
kafkaTopic: unauthenticated.DCAE_CL_OUTPUT 
cdsNamespace: emco
cnfIp: 192.168.102.81
cnfPort: 30831

# probe configuration parameters
liveness:
  initialDelaySeconds: 10
  periodSeconds: 30
  # necessary to disable liveness probe when setting breakpoints
  # in debugger so K8s doesn't restart unresponsive container
  enabled: true

readiness:
  initialDelaySeconds: 10
  periodSeconds: 30

service:
  type: NodePort
  name: policyms 
  portName: policyms 
  internalPort: 9089
  externalPort: 9089
  nodePort: 89
  label: policyms 

# Configure resource requests and limits
flavor: large
resources:
  small:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 5m
      memory: 5Mi
  large:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 5m
      memory: 50Mi
  unlimited: {}
